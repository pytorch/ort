# Python package
# Create and test a Python package on multiple Python versions.
# Add steps that analyze code, save the dist with the build record, publish to a PyPI-compatible index, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/python

trigger:
- master

pool:
  vmImage: ubuntu-latest
strategy:
  matrix:
    # Python36:
    #   python.version: '3.6'
    # Python37:
    #   python.version: '3.7'
    Python38:
      python.version: '3.8'

steps:
- task: UsePythonVersion@0
  inputs:
    versionSpec: '$(python.version)'
  displayName: 'Use Python $(python.version)'

- script: |
    python -m pip install --upgrade pip
    pip install -r requirements.txt
    pip install -r requirements-dev.txt
  displayName: 'Install dependencies'

- script: |
    python setup.py bdist_wheel
  displayName: 'python setup.py bdist_wheel'

- task: CopyFiles@2
  displayName: 'Copy Python Wheel to: $(Build.ArtifactStagingDirectory)'
  inputs:
    SourceFolder: '$(Build.SourcesDirectory)'
    Contents: 'dist/*.whl'
    TargetFolder: '$(Build.ArtifactStagingDirectory)'

- script: 'pip install twine'
  displayName: 'pip install twine'

- task: TwineAuthenticate@1
  inputs:
    pythonUploadServiceConnection: 'ortgpunightlytraining'
  displayName: 'TwineAuthenticate ortgpunightlytraining'

- script: |
    python3 -m twine upload --verbose -r ortgpunightlytraining --config-file $(PYPIRC_PATH) $(Build.ArtifactStagingDirectory)/dist/*.whl
  displayName: 'python3 -m twine upload --verbose -r ortgpunightlytraining --config-file $(PYPIRC_PATH) $(Build.ArtifactStagingDirectory)/dist/*.whl'
  condition: succeededOrFailed()
  timeoutInMinutes: 20


# - script: |
#     python -m twine upload --repository-url https://test.pypi.org/legacy/ --config-file $(PYPIRC_PATH) $(Build.ArtifactStagingDirectory)/dist/*.whl
#   displayName: 'python -m twine upload --repository testpypi $(Build.ArtifactStagingDirectory)/dist/*.whl'
