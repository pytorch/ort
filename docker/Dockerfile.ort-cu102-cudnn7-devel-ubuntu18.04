# ONNX Runtime Training Module for PyTorch
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License.

# Usage
#   Build: docker build -f Dockerfile.ort-cu102-cudnn7-devel-ubuntu18.04 -t [image-name] .
#   Run: docker run -it --gpus all --name [run-name] [image-name]:latest /bin/bash 
# Example:
#   docker build -f Dockerfile.ort-cu102-cudnn7-devel-ubuntu18.04 -t ort.cu102 .
#   docker run -it --gpus all --name my-experiments ort.cu102:latest /bin/bash 

# CUDA development image for building sources
FROM nvidia/cuda:10.2-cudnn7-devel-ubuntu18.04 as builder

# Install and update tools to minimize security vulnerabilities
RUN apt-get update
RUN apt-get install -y software-properties-common wget apt-utils patchelf git libprotobuf-dev protobuf-compiler cmake
RUN unattended-upgrade
RUN apt-get autoremove -y

# Python and pip
RUN update-alternatives --install /usr/bin/python python /usr/bin/python3 1
RUN apt-get install -y python3-pip
RUN update-alternatives --install /usr/bin/pip pip /usr/bin/pip3 1
RUN pip install --upgrade pip

# PyTorch
RUN pip install onnx ninja
# Uncomment one of the lines below. First one gets stable version. Second gets nightly build.
RUN pip install torch==1.8.1+cu102 torchvision==0.9.1+cu102 torchaudio==0.8.1 -f https://download.pytorch.org/whl/torch_stable.html
# RUN pip install --pre torch -f https://download.pytorch.org/whl/nightly/cu111/torch_nightly.html

# ORT Module
RUN pip install --pre onnxruntime-training -f https://onnxruntimepackages.z14.web.core.windows.net/onnxruntime_nightly_cu102.html
RUN pip install torch-ort

WORKDIR /workspace

# Basic testing
#   git clone https://github.com/pytorch/ort.git
#   pip install wget pandas transformers sklearn
#   python ./ort/tests/bert_for_sequence_classification.py
